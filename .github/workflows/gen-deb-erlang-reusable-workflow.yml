name: Reusable workflow to build Erlang Debian packages

on:
  workflow_call:
    inputs:
      erlang_tag:
        description: 'Erlang OTP tag (e.g. OTP-25.3.2.7)'
        required: true
        type: string
      erlang_major:
        description: 'Major version of Erlang (e.g. 25)'
        required: true
        type: string
      distribution_name:
        description: 'Distribution name (e.g. ubuntu, debian)'
        required: true
        type: string
      distribution_codename:
        description: 'Distribution codename (e.g. jammy, trixie)'
        required: true
        type: string
      distribution_version:
        description: 'Distribution version (e.g. 22.04, trixie)'
        required: true
        type: string
      ppa_repository:
        description: 'PPA repository for Ubuntu distributions (e.g. rabbitmq-erlang-25)'
        required: true
        type: string

env:
  ERLANG_TAG: ${{ inputs.erlang_tag != '' && inputs.erlang_tag || github.event.client_payload.tag }}
  GIT_AUTHOR_NAME: ${{ secrets.RABBITMQ_CI_USERNAME }}
  GIT_AUTHOR_EMAIL: ${{ secrets.RABBITMQ_CI_EMAIL }}

jobs:
  update-package:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Check out Erlang OTP source code
        uses: actions/checkout@v4
        with:
          repository: erlang/otp
          ref: ${{ env.ERLANG_TAG }}
          path: 'erlang-sources'
      - name: Check out Erlang Debian package repository
        uses: actions/checkout@v4
        with:
          repository: rabbitmq/erlang-debian-package
          ref: OTP-${{ inputs.erlang_major }}.x/${{ inputs.distribution_name }}/${{ inputs.distribution_version }}
          path: 'package-sources'
          ssh-key: ${{ secrets.RABBITMQ_CI_PRIVATE_KEY }}
      - name: Update package
        run: ci/erlang/deb/update-package.sh
      - name: Push Changes to package repository
        working-directory: 'package-sources'
        run: |
          git push origin OTP-${{ inputs.erlang_major }}.x/${{ inputs.distribution_name }}/${{ inputs.distribution_version }}
  build-source-package:
    if: inputs.distribution_name == 'ubuntu'
    runs-on: ubuntu-22.04
    needs: update-package
    container:
      image: ${{ inputs.distribution_name }}:${{ inputs.distribution_version }}
    steps:
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y --no-install-recommends ca-certificates gnupg openssh-client git
      - uses: actions/checkout@v4
      - name: Check out Erlang OTP source code
        uses: actions/checkout@v4
        with:
          repository: erlang/otp
          ref: ${{ env.ERLANG_TAG }}
          path: 'erlang-sources'
      - name: Check out Erlang Debian package repository
        uses: actions/checkout@v4
        with:
          repository: rabbitmq/erlang-debian-package
          ref: OTP-${{ inputs.erlang_major }}.x/${{ inputs.distribution_name }}/${{ inputs.distribution_version }}
          path: 'package-sources'
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}
      - name: Build source package
        run: ci/erlang/deb/build-source-package.sh
        env:
          SIGNING_KEY_ID: ${{ secrets.GPG_PRIVATE_KEY_ID }}
          LAUNCHPAD_ID: ${{ secrets.LAUNCHPAD_ID }}
          PPA_REPOSITORY: ${{ inputs.ppa_repository }}
          DISTRIBUTION_NAME: ${{ inputs.distribution_name }}
          DISTRIBUTION_CODENAME: ${{ inputs.distribution_codename }}
          DISTRIBUTION_VERSION: ${{ inputs.distribution_version }}
          DISTRIBUTION_VERSIONS: '18.04 20.04 22.04 24.04'
          SOURCE_PROJECT_NAME: erlang
  build-binary-package:
    runs-on: ubuntu-22.04
    needs: update-package
    container:
      image: ${{ inputs.distribution_name }}:${{ inputs.distribution_version }}
    steps:
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y --no-install-recommends ca-certificates gnupg openssh-client git
      - uses: actions/checkout@v4
      - name: Check out Erlang OTP source code
        uses: actions/checkout@v4
        with:
          repository: erlang/otp
          ref: ${{ env.ERLANG_TAG }}
          path: 'erlang-sources'
      - name: Check out Erlang Debian package repository
        uses: actions/checkout@v4
        with:
          repository: rabbitmq/erlang-debian-package
          ref: OTP-${{ inputs.erlang_major }}.x/${{ inputs.distribution_name }}/${{ inputs.distribution_version }}
          path: 'package-sources'
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}
      - name: Build package
        run: ci/erlang/deb/build-package.sh
        env:
          SIGNING_KEY_ID: ${{ secrets.GPG_PRIVATE_KEY_ID }}
      - name: Delete latest versions
        uses: docker://pivotalrabbitmq/cloudsmith-action:latest
        with:
          username: ${{ secrets.CLOUDSMITH_USERNAME }}
          organization: ${{ secrets.CLOUDSMITH_ORGANIZATION }}
          repository: rabbitmq-erlang
          api_key: ${{ secrets.CLOUDSMITH_API_KEY }}
          action: delete
          do_delete: true
          version_filter: 1:${{ inputs.erlang_major }}*
          keep_last_n: 2
          keep_last_minor_patches: true
      - name: Push packages to Cloudsmith
        uses: docker://pivotalrabbitmq/cloudsmith-action:latest
        with:
          username: ${{ secrets.CLOUDSMITH_USERNAME }}
          organization: ${{ secrets.CLOUDSMITH_ORGANIZATION }}
          repository: rabbitmq-erlang
          api_key: ${{ secrets.CLOUDSMITH_API_KEY }}
          distribution: ${{ inputs.distribution_name }}/${{ inputs.distribution_codename }}
          action: upload
          republish: true
          local_path: packages
          globs: '*.deb'
          tags: erlang,erlang-${{ inputs.erlang_major }}.x
  test-binary-package:
    runs-on: ubuntu-22.04
    needs: build-binary-package
    container:
      image: ${{ inputs.distribution_name }}:${{ inputs.distribution_version }}
    steps:
      - uses: actions/checkout@v4
      - name: Check out Erlang Debian package repository
        uses: actions/checkout@v4
        with:
          repository: rabbitmq/erlang-debian-package
          ref: OTP-${{ inputs.erlang_major }}.x/${{ inputs.distribution_name }}/${{ inputs.distribution_version }}
          path: 'package-sources'
      - name: Test package
        run: ci/erlang/deb/test-cloudsmith-package.sh
        env:
          CLOUDSMITH_ORG: ${{ secrets.CLOUDSMITH_ORGANIZATION }}
          CLOUDSMITH_REPOSITORY: rabbitmq-erlang
